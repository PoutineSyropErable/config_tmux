#Do control+s then the keys for shortcut
#Control+s, release, then r for reload

set -g mouse on

unbind r
bind r source-file ~/.tmux.conf

set -g prefix C-s

bind-key E copy-mode

bind-key v split-window -v -c '#{pane_current_path}'
bind-key h split-window -h -c '#{pane_current_path}'
bind-key f resize-pane -Z


bind-key d split-window -h -c '#{pane_current_path}'
#bind-key c split-window -h

bind b previous-window
bind z last-pane

#doesn't work
bind-key c new-window -c '#{pane_current_path}'

#bind-key c split-window -h

bind b previous-window
bind z last-pane

bind-key c new-window 
#bind-key h new-window

#bind-key x kill-pane
#bind-key X kill-window

bind-key -r C-i resize-pane -U 5     # Ctrl + i for resizing up
bind-key -r C-I resize-pane -U 5     # Ctrl + i for resizing up
bind-key -r C-k resize-pane -D 5     # Ctrl + k for resizing down
bind-key -r C-j resize-pane -L 5     # Ctrl + j for resizing left
bind-key -r C-l resize-pane -R 5     # Ctrl + l for resizing right

set-option -sg escape-time 10
set-option -g focus-events on

# act like vim
setw -g mode-keys vi
#bind-key i select-pane -U
#bind-key k select-pane -D
#bind-key j select-pane -L
#bind-key l select-pane -R

# Remap keys for copy mode navigation
setw -g mode-keys vi  # Set vi mode for copy mode navigation
bind-key -T copy-mode-vi j send-keys -X cursor-left
bind-key -T copy-mode-vi l send-keys -X cursor-right
bind-key -T copy-mode-vi k send-keys -X cursor-down
bind-key -T copy-mode-vi i send-keys -X cursor-up


#set -g pane-active-border fg=green
#set pane-active-border "bg=blue"
set pane-border-style fg=#ff007f
set pane-active-border-style "fg=yellow"


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'dracula/tmux'
set -g @plugin 'christoomey/vim-tmux-navigator'
#set -g @plugin 'tmux-plugins/tmux-battery'
#set -g @plugin 'tmux-plugins/tmux-battery'


# Enable switching windows with Ctrl+s + number
bind-key 0 select-window -t 0
bind-key \# select-window -t 0
bind-key 1 select-window -t 1
bind-key 2 select-window -t 2
bind-key 3 select-window -t 3
bind-key 4 select-window -t 4
bind-key 5 select-window -t 5
bind-key 6 select-window -t 6
bind-key 7 select-window -t 7
bind-key 8 select-window -t 8
bind-key 9 select-window -t 9


# # Enable switching panes with Ctrl+s, shift+ number
bind-key | select-pane -t 0
bind-key ) select-pane -t 0
bind-key ! select-pane -t 1
bind-key \"  select-pane -t 2
bind-key / select-pane -t 3
bind-key $ select-pane -t 4
bind-key % select-pane -t 5
bind-key ? select-pane -t 6
bind-key & select-pane -t 7
bind-key * select-pane -t 8
bind-key ( select-pane -t 9
#----- can't bind " key. Shift+2 doesn't work



#-----tmux nvim, neovim navigator:
# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"



bind y if-shell "$is_vim" "run-shell 'echo Vim is running'" "run-shell 'echo Vim is not running'"

bind-key u if-shell "$is_vim" "send-keys C-w l" "select-pane -L"

bind-key j if-shell "$is_vim" "send-keys C-w j" "select-pane -L"
bind-key k if-shell "$is_vim" "send-keys C-w k" "select-pane -D"
bind-key i if-shell "$is_vim" "send-keys C-w i" "select-pane -U"
bind-key l if-shell "$is_vim" "send-keys C-w l" "select-pane -R"
bind-key , if-shell "$is_vim" "send-keys ," "select-pane -l"

bind-key q if-shell "$is_vim" "send-keys C-w x" "display-panes"
bind-key x kill-pane
bind-key X if-shell "$is_vim" "send-keys C-w X" "kill-window"

bind-key Left if-shell "$is_vim" "send-keys C-w j" "select-pane -L"
bind-key Down if-shell "$is_vim" "send-keys C-w k" "select-pane -D"
bind-key Up if-shell "$is_vim" "send-keys C-w i" "select-pane -U"
bind-key Right if-shell "$is_vim" "send-keys C-w l" "select-pane -R"



# Bind Control+n to the 'mpc' table
bind-key -n C-S-n switch-client -T mpc

# Create a custom key table named 'mpc'
bind-key -T mpc Left run-shell "mpc prev"
bind-key -T mpc Right run-shell "mpc next"
bind-key -T mpc Up run-shell "mpc toggle"
bind-key -T mpc Down run-shell "mpc stop"
bind-key -T mpc 6 run-shell "mpc seek +5"
bind-key -T mpc 4 run-shell "mpc seek -5"
bind-key -T mpc 8 run-shell "mpc volume +5"
bind-key -T mpc 2 run-shell "mpc volume -5"

bind-key -T mpc , run-shell "mpc random"
bind-key -T mpc . run-shell "mpc repeat"
bind-key -T mpc Ã© run-shell "mpc single"




set -g @dracula-show-powerline true
set -g @dracula-show-flags true
set -g @dracula-show-left-icon session
set -g @dracula-synchronize-panes-label "Sync"



set -g @dracula-fixed-location "Montreal"
set -g @dracula-show-location true
set -g @dracula-show-fahrenheit false
set -g @dracula-time-format "%Hh:%Mm"


set -g @dracula-playerctl-format "#[bg=#d16aff,fg=black]{{ title }} #[fg=#000000,bg=black]  #[fg=#FF1493,bg=black] {{ duration(position) }}/{{duration(mpris:length)}}#[fg=black,bg=black]"



set -g @dracula-playerctl-colors "dark_gray dark_gray"





set -g @dracula-plugins "playerctl weather time"




set -g default-command /usr/bin/fish
set -g default-shell /usr/bin/fish
#set -g default-terminal "kitty"




# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

#source-file ~/.tmux.conf
# this create an infinite loop



#set-option -g status-left "#[fg=#000000,bg=#FF87D7] #( ~/.config/polybar.old/tmux/volume.sh )#[bg=#FF87D7,fg=#000000] #[fg=#000000,bg=#000000]|#[fg=#000000,bg=#FFAF5F] #( ~/.config/polybar.old/tmux/title.sh ) #[bg=#FFAF5F,fg=#000000] #[fg=#000000,bg=#000000]|#[fg=#f8f8f2,bg=#5F5FAF] #( ~/.config/polybar.old/tmux/time.sh ) #[bg=#5F5FAF,fg=#f8f8f2]"
